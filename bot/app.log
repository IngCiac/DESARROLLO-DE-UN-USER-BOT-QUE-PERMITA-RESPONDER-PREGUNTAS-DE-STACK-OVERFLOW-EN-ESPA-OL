main
creating database
database created
creating bot
command handler
message handler
start bot
bot started
bot idle

message received hola

message received hola

message received cli
questions available 83 
ask to bot for: cli
time elapsed 0:00:01.877978
database_question ¿De que manera se puede encriptar una contraseña para una base de datos?
questions match 1 
{'Id': 1, 'Title': '¿De que manera se puede encriptar una contraseña para una base de datos?', 'Href': 'https://es.stackoverflow.com/questions/2994/de-que-manera-se-puede-encriptar-una-contrase%c3%b1a-para-una-base-de-datos', 'ShortDescription': '\r\n            Según he leido SHA-2 no es seguro y hace falta usar una encriptación más fuerte. He visto que en PHP se puede usar password_hash(). \n\n¿La salida de esa función sería suficiente encriptación?\r\n        ', 'Content': '\nSegún he leido SHA-2 no es seguro y hace falta usar una encriptación más fuerte. He visto que en PHP se puede usar password_hash(). \n¿La salida de esa función sería suficiente encriptación?\n', 'Answer': "\nHe encontrado una respuesta de Stackoverflow en inglés que me responde a la pregunta Secure hash and salt for PHP passwords.\nLa respuesta mas votada dice que no se debe hacer hash con SHA1, MD5 o SHA256 porque los crackers modernos pueden superar los 180 miles de millones de hash por segundo por lo que no les cuesta romperla.\nY la segunda más votada recomienda no escribir nuestro propio mecanismo, sino usar la función de PHP password_hash(). Ejemplo de password_hash():\n$pass = $_POST['password'];    \n$passHash = password_hash($pass, PASSWORD_BCRYPT);\n\nEl algoritmo BCRYPT nos creará una cadena de 72 caracteres como máximo, la cual es distinta cada vez que se codifica, por lo que para comprobar que la contraseña introducida es la correcta debemos usar la función password_verify():\npassword_verify($pass, $passHash)\n\n", 'CreatedAt': datetime.datetime(2020, 8, 21, 2, 56, 8, 797000)}

message received si
questions available 85 
ask to bot for: si
time elapsed 0:00:00.023286
database_question Error Mysqli mysqli_query() expects parameter 1 to be mysqli, incluso si ya le estoy dando los dos parametros que pide [duplicada]
questions match 1 
{'Id': 79, 'Title': 'Error Mysqli mysqli_query() expects parameter 1 to be mysqli, incluso si ya le estoy dando los dos parametros que pide [duplicada]', 'Href': 'https://es.stackoverflow.com/questions/157106/error-mysqli-mysqli-query-expects-parameter-1-to-be-mysqli-incluso-si-ya-le-e', 'ShortDescription': '\r\n            Tengo este código:\n\n<?php\n    require ("../clases/Conexion.php");\n\n    session_start();\n         $host = "localhost:3307";\n         $user = "root";\n         $pass = "";\n         $bd = "nutricion";\n ...\r\n        ', 'Content': '\n\n\n\n\n\n\nEsta pregunta ya tiene respuestas aqui:\r\n                        \r\n                    \n\n\n\nWarning: mysqli_query() expects parameter 1 to be mysqli\n\r\n                                (2 respuestas)\r\n                            \n\nCerrada hace 2 años.\n\n\n\nTengo este código:\n<?php\n    require ("../clases/Conexion.php");\n\n    session_start();\n         $host = "localhost:3307";\n         $user = "root";\n         $pass = "";\n         $bd = "nutricion";\n         $con = mysqli_connect($host,$user,$pass,$bd) or die("Error al conectar al Servidor");\n         $con = new conexion();\n        $con->conectar();\n\n    if ($_SESSION["correo"]==\'\') {\n        //header("Location:../index.php");  exit;\n        echo "1";\n    }\n    $msql_db_query= mysqli_query($bd,"SELECT * FROM tbl_usuario WHERE correo=\'" . $_SESSION[\'correo\'] . "\';") or die ("Error al buscar usuario");\n    if ($result) {\n        $id_usuario = mysqli_result($msql_db_query(),0,\'id\');\n        $nombre_usuario = mysqli_result($msql_db_query(),0,\'nombre\') . " " . mysqli_result($msql_db_query(),0,\'apellido\');\n     }else {\n        //header("Location:../index.php");  exit;\n        echo "2";\n    }\n\n    date_default_timezone_set(\'America/Mexico_City\');\n    ?>\n\nEl cual me genera el siguiente error:\n\nWarning: mysqli_query() expects parameter 1 to be mysqli, object given in C:\\xampp\\htdocs\\admin\\clases\\Acceso.php on line 17\n  Error al buscar usuario\n\nHe buscado en internet cuál sería la solución pero no logro encontrarlo, quería ver si alguno podría ayudarme verificando mi código. Se supone que después de pasar por el login debería de pasar a otra página, antes si funcionaba, pero ahora ya no. \nIntente todas las sufgerencias que me fueron hechas, las que encontre en internet y nada me funciona, no entiendo porque me sale ese error si realmente le estoy dando los 2 parametros que me pide.\n', 'Answer': '\nBienvenid@, Analy. El error te dice que la función mysqli_query espera que en el primer parámetro coloques el objeto de conexión a tu base de datos, y tú le estás enviando el nombre de la base de datos.\nEn tu código, te falta almacenar en alguna variable la acción que haces para conectarte, que seguramente es en $con->conectar();.\nTe sugiero a cambiar a algo como esto, y nos cuentas si te sirvió:\n$link = $con->conectar();\n\n$msql_db_query= mysqli_query($link, "SELECT * FROM tbl_usuario WHERE correo=\'" . $_SESSION[\'correo\'] . "\';") or die ("Error al buscar usuario");\n\n', 'CreatedAt': datetime.datetime(2020, 8, 21, 2, 59, 18, 3000)}
idle done
main
creating database
database created
creating bot
command handler
message handler
start bot
bot started
bot idle

message received hola

message received cli
questions available 138 
ask to bot for: cli
time elapsed 0:00:00.020285
database_question ¿De que manera se puede encriptar una contraseña para una base de datos?
questions match 1 
{'Id': 1, 'Title': '¿De que manera se puede encriptar una contraseña para una base de datos?', 'Href': 'https://es.stackoverflow.com/questions/2994/de-que-manera-se-puede-encriptar-una-contrase%c3%b1a-para-una-base-de-datos', 'ShortDescription': '\r\n            Según he leido SHA-2 no es seguro y hace falta usar una encriptación más fuerte. He visto que en PHP se puede usar password_hash(). \n\n¿La salida de esa función sería suficiente encriptación?\r\n        ', 'Content': '\nSegún he leido SHA-2 no es seguro y hace falta usar una encriptación más fuerte. He visto que en PHP se puede usar password_hash(). \n¿La salida de esa función sería suficiente encriptación?\n', 'Answer': "\nHe encontrado una respuesta de Stackoverflow en inglés que me responde a la pregunta Secure hash and salt for PHP passwords.\nLa respuesta mas votada dice que no se debe hacer hash con SHA1, MD5 o SHA256 porque los crackers modernos pueden superar los 180 miles de millones de hash por segundo por lo que no les cuesta romperla.\nY la segunda más votada recomienda no escribir nuestro propio mecanismo, sino usar la función de PHP password_hash(). Ejemplo de password_hash():\n$pass = $_POST['password'];    \n$passHash = password_hash($pass, PASSWORD_BCRYPT);\n\nEl algoritmo BCRYPT nos creará una cadena de 72 caracteres como máximo, la cual es distinta cada vez que se codifica, por lo que para comprobar que la contraseña introducida es la correcta debemos usar la función password_verify():\npassword_verify($pass, $passHash)\n\n", 'CreatedAt': datetime.datetime(2020, 8, 21, 2, 56, 8, 797000)}

message received hola

message received crear base
questions available 145 
ask to bot for: crear base
time elapsed 0:00:00.029025
database_question ¿Cómo crear una página de videos?
questions match 1 
{'Id': 104, 'Title': '¿Cómo crear una página de videos?', 'Href': 'https://es.stackoverflow.com/questions/88494/c%c3%b3mo-crear-una-p%c3%a1gina-de-videos', 'ShortDescription': '\r\n            Estoy planteando el diseño de la base de datos llamada tutoriales:\n\nid       title       autor      detalle          índice       url\n 1      HTML 5       Jose    texto content  lista de vídeos   m-m\n ...\r\n        ', 'Content': "\nEstoy planteando el diseño de la base de datos llamada tutoriales:\nid       title       autor      detalle          índice       url\n 1      HTML 5       Jose    texto content  lista de vídeos   m-m\n 2       CSS 3       Jose    texto content  lista de vídeos   m-v\n\nLa estructura parece ser sencilla, clara y fácil, pero el problema mayor se basa en el índice de los videos.\n\nEn el índice contará toda la lista de los videos.\n\nAquí el detalle, el problema es que deseo mostrar los primeros 10 videos de la lista del índice y el resto de los vídeos restringirlos, es decir, que se muestren igual pero que el enlace del video esté disponible solamente si se registra en la página web.\nPor ejemplo, la consulta de los resultados los asignaría de está manera:\nwhile ($video = mysqli_fetch_array($rows)) {\n  echo '<div>'.$video['title'].'</div>\n        <div>'.$video['autor'].'</div>\n        <div>'.$video['detalle'].'</div>\n        <div>'.$video['indice'].'</div>';\n}\nwhile($row = mysqli_fetch_array($result)) {\n  $id = $row['id'];\n  $title = $row['title'];\n  $autor = $row['autor'];\n  $detalle = $row['detalle'];\n  $indice = $row['indice'];\n  $urls = $row['url'];\n}\n\nEl problema es, ¿Cómo restringir el resto de videos? ¿Cómo mostrar la lista de los índices de videos a una restricción a cierto número de videos?\n", 'Answer': '\nBien, te mostraré un ejemplo de lo que te he dicho en mi comentario.\nTe toca a ti refinar los detalles. Tendrás un ejemplo de cómo funciona. He comentado algunas cosas en el código, menos de lo que quisiera, por falta de tiempo. No obstante, creo que el código es bastante claro.\nLa idea es esta:\nDependiendo de si el usuario está registrado o no, previa verificación en la tabla de usuarios, lanzarás una consulta con LIMIT 10 o no.\nEn ambos casos recuperas un array de resultados y construyes una tabla, la cual mostrarás en pantalla. La misma tendrá sólo 10 vídeos si el usuario no está registrado, y todos los vídeos si lo está.\nPara consultar a la Base de datos he usado PDO en vez de MySQLi por varios motivos que no quiero exponer ahora, entre ellos porque es más fácil y porque para obtener un arreglo asociativo de resultados, en tu máquina puede fallar si no tienes la extensión mysqlnd instalada... por eso uso PDO. Si por algún motivo estás obligado a usar MySQLi, puedes adaptar esa parte a MySQLi sin mayor problema.\nEste es un ejemplo completo en phpfiddle:\nCódigo: Ver Demo\n<?php\n\nrequire "util/public_db_info.php";\n$pdo = new PDO($dsn, $user_name, $pass_word);\n\n/**\n *  Prueba con un usuario registrado \n *  En el código  se usa  PDO y  consultas preparadas\n*/\n\n$sql = "SELECT usuario_estatus FROM usuario WHERE usuario_id=:id";  \n$id=2;\n$stmt = $pdo->prepare($sql);\n$stmt->bindValue("id",$id);\n$stmt ->execute();\n\n$bolRegistrado=$stmt->fetchColumn();\nimprimir ($bolRegistrado, $pdo);\n\n/**\n *  Prueba con un usuario NO registrado \n *  En el código  se usa  PDO y  consultas preparadas\n*/\n\n$sql = "SELECT usuario_estatus FROM usuario WHERE usuario_id=:id";  \n$id=1;\n$stmt = $pdo->prepare($sql);\n$stmt->bindValue("id",$id);\n$stmt ->execute();\n\n$bolRegistrado=$stmt->fetchColumn();\nimprimir ($bolRegistrado, $pdo);\n\n\n\n$pdo = null;\n\n\nfunction imprimir($bolRegistrado, $pdo)\n{\n    if ($bolRegistrado||$bolRegistrado=0)\n    {\n        $sql_videos="SELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\n                 FROM videos v\n                 INNER JOIN autores a ON v.autor_id = a.autor_id";\n    }else{\n        $sql_videos="SELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\n                 FROM videos v\n                 INNER JOIN autores a ON v.autor_id = a.autor_id\n                 LIMIT 10";\n\n    }\n\n    $datos=$pdo->query($sql_videos);\n    $arrDatos = $datos->fetchAll(PDO::FETCH_ASSOC);\n\n    if ($arrDatos)\n    {\n        echo "<hr />SE ENCONTRARON  ".count($arrDatos). " REGISTROS<br /><hr />";\n        /**\n         *  Construímos nuestra tabla  de forma limpia\n        */\n        $strHtml=\'LISTA DE VÍDEOS:<br />\';\n        $strHtml.=\'<table style="border:1px solid black; collapse:collapse;">\';\n        $strHtml.=\'<thead>\';\n        $strHtml.=\'<tr>\';\n        $strHtml.=\'<th>ID</th><th>TÍTULO</th><th>AUTOR</th><th>DESCRIPCION</th>\';\n        $strHtml.=\'</th></tr>\';\n        $strHtml.=\'<thead>\';\n        $strHtml.=\'<tbody>\';\n\n\n        foreach ($arrDatos as $row)\n        {\n            $strHtml.=\'<tr>\';\n            $strHtml.=\'<td>\'.$row["video_id"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["video_titulo"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["autor_nombre"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["video_detalle"].\'</td>\';\n            $strHtml.=\'</tr>\';\n        }\n        $strHtml.=\'</tbody>\';\n        $strHtml.=\'</table>\';\n        echo $strHtml;\n    }\n    else\n    {\n       echo "No hay datos";\n    }\n}\n\n?>\n\nResultado\n\n\n<hr />SE ENCONTRARON 12 REGISTROS<br />\r\n<hr />LISTA DE VÍDEOS:<br />\r\n<table style="border:1px solid black; collapse:collapse;">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>TÍTULO</th>\r\n      <th>AUTOR</th>\r\n      <th>DESCRIPCION</th>\r\n      </th>\r\n    </tr>\r\n    <thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>HTML5</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre HTML5</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>PHP</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre PHP</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Java</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Java</td>\r\n        </tr>\r\n        <tr>\r\n          <td>4</td>\r\n          <td>CSS</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre CSS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>5</td>\r\n          <td>JS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre JS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>6</td>\r\n          <td>Python</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre Py</td>\r\n        </tr>\r\n        <tr>\r\n          <td>7</td>\r\n          <td>SSH</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre SSH</td>\r\n        </tr>\r\n        <tr>\r\n          <td>8</td>\r\n          <td>iOS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre iOS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>Android</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Android</td>\r\n        </tr>\r\n        <tr>\r\n          <td>10</td>\r\n          <td>Nada</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre Nada</td>\r\n        </tr>\r\n        <tr>\r\n          <td>11</td>\r\n          <td>C#</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre C#</td>\r\n        </tr>\r\n        <tr>\r\n          <td>12</td>\r\n          <td>Pascal</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Pascal</td>\r\n        </tr>\r\n      </tbody>\r\n</table>\r\n<hr />SE ENCONTRARON 10 REGISTROS<br />\r\n<hr />LISTA DE VÍDEOS:<br />\r\n<table style="border:1px solid black; collapse:collapse;">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>TÍTULO</th>\r\n      <th>AUTOR</th>\r\n      <th>DESCRIPCION</th>\r\n      </th>\r\n    </tr>\r\n    <thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>HTML5</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre HTML5</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>PHP</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre PHP</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Java</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Java</td>\r\n        </tr>\r\n        <tr>\r\n          <td>4</td>\r\n          <td>CSS</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre CSS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>5</td>\r\n          <td>JS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre JS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>6</td>\r\n          <td>Python</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre Py</td>\r\n        </tr>\r\n        <tr>\r\n          <td>7</td>\r\n          <td>SSH</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre SSH</td>\r\n        </tr>\r\n        <tr>\r\n          <td>8</td>\r\n          <td>iOS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre iOS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>Android</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Android</td>\r\n        </tr>\r\n        <tr>\r\n          <td>10</td>\r\n          <td>Nada</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre Nada</td>\r\n        </tr>\r\n      </tbody>\r\n</table>\n\n\n\n\nCódigo de creación de tablas: Ver Demo\nEste sería un demo de la creación de las tablas. Es también básico. Si usas InnoDB debes tomar en cuenta la declaración de llaves foráneas, la integridad referencial, etc. No lo he hecho por falta de tiempo, como ves, es mucho código. Y también es bueno no dar el trabajo totalmente hecho :)\nHe implementando algunas de las cosas que te dije en el comentario, como no poner el nombre del autor en la tabla vídeos, sino en una tabla aparte. Luego, mediante JOIN se pueden unir las tablas usando las llaves foráneas para traer los datos que necesites.\nCREATE TABLE  IF NOT EXISTS videos \n    (\n      video_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      video_titulo      VARCHAR(50) NOT NULL,\n      video_detalle     VARCHAR(50) NOT NULL,\n      autor_id          INT\n\n    );\n\n\nINSERT INTO videos (video_id,video_titulo, video_detalle, autor_id) VALUES  \n    (1,\'HTML5\', \'Este vídeo es sobre HTML5\',1), \n    (2,\'PHP\', \'Este vídeo es sobre PHP\',2), \n    (3,\'Java\', \'Este vídeo es sobre Java\',3), \n    (4,\'CSS\', \'Este vídeo es sobre CSS\',3), \n    (5,\'JS\', \'Este vídeo es sobre JS\',2), \n    (6,\'Python\', \'Este vídeo es sobre Py\',1), \n    (7,\'SSH\', \'Este vídeo es sobre SSH\',1), \n    (8,\'iOS\', \'Este vídeo es sobre iOS\',2), \n    (9,\'Android\', \'Este vídeo es sobre Android\',3), \n    (10,\'Nada\', \'Este vídeo es sobre Nada\',2), \n    (11,\'C#\', \'Este vídeo es sobre C#\',1), \n    (12,\'Pascal\', \'Este vídeo es sobre Pascal\',3) \n\n    ; \n\n\nCREATE TABLE  IF NOT EXISTS autores \n    (\n      autor_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      autor_nombre      VARCHAR(50) NOT NULL\n\n    );\n\n\nINSERT INTO autores (autor_id,autor_nombre) VALUES \n    (1,\'Pedro\'),\n    (2,\'Santiago\'),\n    (3,\'Juan\')\n    ;\n\n\nCREATE TABLE  IF NOT EXISTS usuario \n    (\n      usuario_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      usuario_nombre      VARCHAR(50) NOT NULL,\n      usuario_estatus     BOOLEAN  \n\n    );\n\n\nINSERT INTO usuario (usuario_id,usuario_nombre,usuario_estatus) VALUES \n    (1,\'Usuario No Registrado\',FALSE),\n    (2,\'Usuario Registrado\',TRUE)\n    ;\n\n-- Seleccionado sólo 10\nSELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\nFROM videos v\nINNER JOIN autores a ON v.autor_id = a.autor_id\nLIMIT 10;\n\n-- Seleccionado todos\nSELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\nFROM videos v\nINNER JOIN autores a ON v.autor_id = a.autor_id;\n\n', 'CreatedAt': datetime.datetime(2020, 8, 21, 3, 0, 4, 513000)}
Message is too long
idle done
main
creating database
database created
creating bot
command handler
message handler
start bot
bot started
bot idle

message received crear base
questions available 177 
ask to bot for: crear base
time elapsed 0:00:00.035785
database_question ¿Cómo crear una página de videos?
questions match 1 
{'Id': 104, 'Title': '¿Cómo crear una página de videos?', 'Href': 'https://es.stackoverflow.com/questions/88494/c%c3%b3mo-crear-una-p%c3%a1gina-de-videos', 'ShortDescription': '\r\n            Estoy planteando el diseño de la base de datos llamada tutoriales:\n\nid       title       autor      detalle          índice       url\n 1      HTML 5       Jose    texto content  lista de vídeos   m-m\n ...\r\n        ', 'Content': "\nEstoy planteando el diseño de la base de datos llamada tutoriales:\nid       title       autor      detalle          índice       url\n 1      HTML 5       Jose    texto content  lista de vídeos   m-m\n 2       CSS 3       Jose    texto content  lista de vídeos   m-v\n\nLa estructura parece ser sencilla, clara y fácil, pero el problema mayor se basa en el índice de los videos.\n\nEn el índice contará toda la lista de los videos.\n\nAquí el detalle, el problema es que deseo mostrar los primeros 10 videos de la lista del índice y el resto de los vídeos restringirlos, es decir, que se muestren igual pero que el enlace del video esté disponible solamente si se registra en la página web.\nPor ejemplo, la consulta de los resultados los asignaría de está manera:\nwhile ($video = mysqli_fetch_array($rows)) {\n  echo '<div>'.$video['title'].'</div>\n        <div>'.$video['autor'].'</div>\n        <div>'.$video['detalle'].'</div>\n        <div>'.$video['indice'].'</div>';\n}\nwhile($row = mysqli_fetch_array($result)) {\n  $id = $row['id'];\n  $title = $row['title'];\n  $autor = $row['autor'];\n  $detalle = $row['detalle'];\n  $indice = $row['indice'];\n  $urls = $row['url'];\n}\n\nEl problema es, ¿Cómo restringir el resto de videos? ¿Cómo mostrar la lista de los índices de videos a una restricción a cierto número de videos?\n", 'Answer': '\nBien, te mostraré un ejemplo de lo que te he dicho en mi comentario.\nTe toca a ti refinar los detalles. Tendrás un ejemplo de cómo funciona. He comentado algunas cosas en el código, menos de lo que quisiera, por falta de tiempo. No obstante, creo que el código es bastante claro.\nLa idea es esta:\nDependiendo de si el usuario está registrado o no, previa verificación en la tabla de usuarios, lanzarás una consulta con LIMIT 10 o no.\nEn ambos casos recuperas un array de resultados y construyes una tabla, la cual mostrarás en pantalla. La misma tendrá sólo 10 vídeos si el usuario no está registrado, y todos los vídeos si lo está.\nPara consultar a la Base de datos he usado PDO en vez de MySQLi por varios motivos que no quiero exponer ahora, entre ellos porque es más fácil y porque para obtener un arreglo asociativo de resultados, en tu máquina puede fallar si no tienes la extensión mysqlnd instalada... por eso uso PDO. Si por algún motivo estás obligado a usar MySQLi, puedes adaptar esa parte a MySQLi sin mayor problema.\nEste es un ejemplo completo en phpfiddle:\nCódigo: Ver Demo\n<?php\n\nrequire "util/public_db_info.php";\n$pdo = new PDO($dsn, $user_name, $pass_word);\n\n/**\n *  Prueba con un usuario registrado \n *  En el código  se usa  PDO y  consultas preparadas\n*/\n\n$sql = "SELECT usuario_estatus FROM usuario WHERE usuario_id=:id";  \n$id=2;\n$stmt = $pdo->prepare($sql);\n$stmt->bindValue("id",$id);\n$stmt ->execute();\n\n$bolRegistrado=$stmt->fetchColumn();\nimprimir ($bolRegistrado, $pdo);\n\n/**\n *  Prueba con un usuario NO registrado \n *  En el código  se usa  PDO y  consultas preparadas\n*/\n\n$sql = "SELECT usuario_estatus FROM usuario WHERE usuario_id=:id";  \n$id=1;\n$stmt = $pdo->prepare($sql);\n$stmt->bindValue("id",$id);\n$stmt ->execute();\n\n$bolRegistrado=$stmt->fetchColumn();\nimprimir ($bolRegistrado, $pdo);\n\n\n\n$pdo = null;\n\n\nfunction imprimir($bolRegistrado, $pdo)\n{\n    if ($bolRegistrado||$bolRegistrado=0)\n    {\n        $sql_videos="SELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\n                 FROM videos v\n                 INNER JOIN autores a ON v.autor_id = a.autor_id";\n    }else{\n        $sql_videos="SELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\n                 FROM videos v\n                 INNER JOIN autores a ON v.autor_id = a.autor_id\n                 LIMIT 10";\n\n    }\n\n    $datos=$pdo->query($sql_videos);\n    $arrDatos = $datos->fetchAll(PDO::FETCH_ASSOC);\n\n    if ($arrDatos)\n    {\n        echo "<hr />SE ENCONTRARON  ".count($arrDatos). " REGISTROS<br /><hr />";\n        /**\n         *  Construímos nuestra tabla  de forma limpia\n        */\n        $strHtml=\'LISTA DE VÍDEOS:<br />\';\n        $strHtml.=\'<table style="border:1px solid black; collapse:collapse;">\';\n        $strHtml.=\'<thead>\';\n        $strHtml.=\'<tr>\';\n        $strHtml.=\'<th>ID</th><th>TÍTULO</th><th>AUTOR</th><th>DESCRIPCION</th>\';\n        $strHtml.=\'</th></tr>\';\n        $strHtml.=\'<thead>\';\n        $strHtml.=\'<tbody>\';\n\n\n        foreach ($arrDatos as $row)\n        {\n            $strHtml.=\'<tr>\';\n            $strHtml.=\'<td>\'.$row["video_id"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["video_titulo"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["autor_nombre"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["video_detalle"].\'</td>\';\n            $strHtml.=\'</tr>\';\n        }\n        $strHtml.=\'</tbody>\';\n        $strHtml.=\'</table>\';\n        echo $strHtml;\n    }\n    else\n    {\n       echo "No hay datos";\n    }\n}\n\n?>\n\nResultado\n\n\n<hr />SE ENCONTRARON 12 REGISTROS<br />\r\n<hr />LISTA DE VÍDEOS:<br />\r\n<table style="border:1px solid black; collapse:collapse;">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>TÍTULO</th>\r\n      <th>AUTOR</th>\r\n      <th>DESCRIPCION</th>\r\n      </th>\r\n    </tr>\r\n    <thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>HTML5</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre HTML5</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>PHP</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre PHP</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Java</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Java</td>\r\n        </tr>\r\n        <tr>\r\n          <td>4</td>\r\n          <td>CSS</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre CSS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>5</td>\r\n          <td>JS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre JS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>6</td>\r\n          <td>Python</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre Py</td>\r\n        </tr>\r\n        <tr>\r\n          <td>7</td>\r\n          <td>SSH</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre SSH</td>\r\n        </tr>\r\n        <tr>\r\n          <td>8</td>\r\n          <td>iOS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre iOS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>Android</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Android</td>\r\n        </tr>\r\n        <tr>\r\n          <td>10</td>\r\n          <td>Nada</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre Nada</td>\r\n        </tr>\r\n        <tr>\r\n          <td>11</td>\r\n          <td>C#</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre C#</td>\r\n        </tr>\r\n        <tr>\r\n          <td>12</td>\r\n          <td>Pascal</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Pascal</td>\r\n        </tr>\r\n      </tbody>\r\n</table>\r\n<hr />SE ENCONTRARON 10 REGISTROS<br />\r\n<hr />LISTA DE VÍDEOS:<br />\r\n<table style="border:1px solid black; collapse:collapse;">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>TÍTULO</th>\r\n      <th>AUTOR</th>\r\n      <th>DESCRIPCION</th>\r\n      </th>\r\n    </tr>\r\n    <thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>HTML5</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre HTML5</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>PHP</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre PHP</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Java</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Java</td>\r\n        </tr>\r\n        <tr>\r\n          <td>4</td>\r\n          <td>CSS</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre CSS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>5</td>\r\n          <td>JS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre JS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>6</td>\r\n          <td>Python</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre Py</td>\r\n        </tr>\r\n        <tr>\r\n          <td>7</td>\r\n          <td>SSH</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre SSH</td>\r\n        </tr>\r\n        <tr>\r\n          <td>8</td>\r\n          <td>iOS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre iOS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>Android</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Android</td>\r\n        </tr>\r\n        <tr>\r\n          <td>10</td>\r\n          <td>Nada</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre Nada</td>\r\n        </tr>\r\n      </tbody>\r\n</table>\n\n\n\n\nCódigo de creación de tablas: Ver Demo\nEste sería un demo de la creación de las tablas. Es también básico. Si usas InnoDB debes tomar en cuenta la declaración de llaves foráneas, la integridad referencial, etc. No lo he hecho por falta de tiempo, como ves, es mucho código. Y también es bueno no dar el trabajo totalmente hecho :)\nHe implementando algunas de las cosas que te dije en el comentario, como no poner el nombre del autor en la tabla vídeos, sino en una tabla aparte. Luego, mediante JOIN se pueden unir las tablas usando las llaves foráneas para traer los datos que necesites.\nCREATE TABLE  IF NOT EXISTS videos \n    (\n      video_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      video_titulo      VARCHAR(50) NOT NULL,\n      video_detalle     VARCHAR(50) NOT NULL,\n      autor_id          INT\n\n    );\n\n\nINSERT INTO videos (video_id,video_titulo, video_detalle, autor_id) VALUES  \n    (1,\'HTML5\', \'Este vídeo es sobre HTML5\',1), \n    (2,\'PHP\', \'Este vídeo es sobre PHP\',2), \n    (3,\'Java\', \'Este vídeo es sobre Java\',3), \n    (4,\'CSS\', \'Este vídeo es sobre CSS\',3), \n    (5,\'JS\', \'Este vídeo es sobre JS\',2), \n    (6,\'Python\', \'Este vídeo es sobre Py\',1), \n    (7,\'SSH\', \'Este vídeo es sobre SSH\',1), \n    (8,\'iOS\', \'Este vídeo es sobre iOS\',2), \n    (9,\'Android\', \'Este vídeo es sobre Android\',3), \n    (10,\'Nada\', \'Este vídeo es sobre Nada\',2), \n    (11,\'C#\', \'Este vídeo es sobre C#\',1), \n    (12,\'Pascal\', \'Este vídeo es sobre Pascal\',3) \n\n    ; \n\n\nCREATE TABLE  IF NOT EXISTS autores \n    (\n      autor_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      autor_nombre      VARCHAR(50) NOT NULL\n\n    );\n\n\nINSERT INTO autores (autor_id,autor_nombre) VALUES \n    (1,\'Pedro\'),\n    (2,\'Santiago\'),\n    (3,\'Juan\')\n    ;\n\n\nCREATE TABLE  IF NOT EXISTS usuario \n    (\n      usuario_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      usuario_nombre      VARCHAR(50) NOT NULL,\n      usuario_estatus     BOOLEAN  \n\n    );\n\n\nINSERT INTO usuario (usuario_id,usuario_nombre,usuario_estatus) VALUES \n    (1,\'Usuario No Registrado\',FALSE),\n    (2,\'Usuario Registrado\',TRUE)\n    ;\n\n-- Seleccionado sólo 10\nSELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\nFROM videos v\nINNER JOIN autores a ON v.autor_id = a.autor_id\nLIMIT 10;\n\n-- Seleccionado todos\nSELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\nFROM videos v\nINNER JOIN autores a ON v.autor_id = a.autor_id;\n\n', 'CreatedAt': datetime.datetime(2020, 8, 21, 3, 0, 4, 513000)}
idle done
main
creating database
database created
creating bot
command handler
message handler
start bot
bot started
bot idle

message received crear base
questions available 210 
ask to bot for: crear base
time elapsed 0:00:00.035573
database_question ¿Cómo crear una página de videos?
questions match 1 
{'Id': 104, 'Title': '¿Cómo crear una página de videos?', 'Href': 'https://es.stackoverflow.com/questions/88494/c%c3%b3mo-crear-una-p%c3%a1gina-de-videos', 'ShortDescription': '\r\n            Estoy planteando el diseño de la base de datos llamada tutoriales:\n\nid       title       autor      detalle          índice       url\n 1      HTML 5       Jose    texto content  lista de vídeos   m-m\n ...\r\n        ', 'Content': "\nEstoy planteando el diseño de la base de datos llamada tutoriales:\nid       title       autor      detalle          índice       url\n 1      HTML 5       Jose    texto content  lista de vídeos   m-m\n 2       CSS 3       Jose    texto content  lista de vídeos   m-v\n\nLa estructura parece ser sencilla, clara y fácil, pero el problema mayor se basa en el índice de los videos.\n\nEn el índice contará toda la lista de los videos.\n\nAquí el detalle, el problema es que deseo mostrar los primeros 10 videos de la lista del índice y el resto de los vídeos restringirlos, es decir, que se muestren igual pero que el enlace del video esté disponible solamente si se registra en la página web.\nPor ejemplo, la consulta de los resultados los asignaría de está manera:\nwhile ($video = mysqli_fetch_array($rows)) {\n  echo '<div>'.$video['title'].'</div>\n        <div>'.$video['autor'].'</div>\n        <div>'.$video['detalle'].'</div>\n        <div>'.$video['indice'].'</div>';\n}\nwhile($row = mysqli_fetch_array($result)) {\n  $id = $row['id'];\n  $title = $row['title'];\n  $autor = $row['autor'];\n  $detalle = $row['detalle'];\n  $indice = $row['indice'];\n  $urls = $row['url'];\n}\n\nEl problema es, ¿Cómo restringir el resto de videos? ¿Cómo mostrar la lista de los índices de videos a una restricción a cierto número de videos?\n", 'Answer': '\nBien, te mostraré un ejemplo de lo que te he dicho en mi comentario.\nTe toca a ti refinar los detalles. Tendrás un ejemplo de cómo funciona. He comentado algunas cosas en el código, menos de lo que quisiera, por falta de tiempo. No obstante, creo que el código es bastante claro.\nLa idea es esta:\nDependiendo de si el usuario está registrado o no, previa verificación en la tabla de usuarios, lanzarás una consulta con LIMIT 10 o no.\nEn ambos casos recuperas un array de resultados y construyes una tabla, la cual mostrarás en pantalla. La misma tendrá sólo 10 vídeos si el usuario no está registrado, y todos los vídeos si lo está.\nPara consultar a la Base de datos he usado PDO en vez de MySQLi por varios motivos que no quiero exponer ahora, entre ellos porque es más fácil y porque para obtener un arreglo asociativo de resultados, en tu máquina puede fallar si no tienes la extensión mysqlnd instalada... por eso uso PDO. Si por algún motivo estás obligado a usar MySQLi, puedes adaptar esa parte a MySQLi sin mayor problema.\nEste es un ejemplo completo en phpfiddle:\nCódigo: Ver Demo\n<?php\n\nrequire "util/public_db_info.php";\n$pdo = new PDO($dsn, $user_name, $pass_word);\n\n/**\n *  Prueba con un usuario registrado \n *  En el código  se usa  PDO y  consultas preparadas\n*/\n\n$sql = "SELECT usuario_estatus FROM usuario WHERE usuario_id=:id";  \n$id=2;\n$stmt = $pdo->prepare($sql);\n$stmt->bindValue("id",$id);\n$stmt ->execute();\n\n$bolRegistrado=$stmt->fetchColumn();\nimprimir ($bolRegistrado, $pdo);\n\n/**\n *  Prueba con un usuario NO registrado \n *  En el código  se usa  PDO y  consultas preparadas\n*/\n\n$sql = "SELECT usuario_estatus FROM usuario WHERE usuario_id=:id";  \n$id=1;\n$stmt = $pdo->prepare($sql);\n$stmt->bindValue("id",$id);\n$stmt ->execute();\n\n$bolRegistrado=$stmt->fetchColumn();\nimprimir ($bolRegistrado, $pdo);\n\n\n\n$pdo = null;\n\n\nfunction imprimir($bolRegistrado, $pdo)\n{\n    if ($bolRegistrado||$bolRegistrado=0)\n    {\n        $sql_videos="SELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\n                 FROM videos v\n                 INNER JOIN autores a ON v.autor_id = a.autor_id";\n    }else{\n        $sql_videos="SELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\n                 FROM videos v\n                 INNER JOIN autores a ON v.autor_id = a.autor_id\n                 LIMIT 10";\n\n    }\n\n    $datos=$pdo->query($sql_videos);\n    $arrDatos = $datos->fetchAll(PDO::FETCH_ASSOC);\n\n    if ($arrDatos)\n    {\n        echo "<hr />SE ENCONTRARON  ".count($arrDatos). " REGISTROS<br /><hr />";\n        /**\n         *  Construímos nuestra tabla  de forma limpia\n        */\n        $strHtml=\'LISTA DE VÍDEOS:<br />\';\n        $strHtml.=\'<table style="border:1px solid black; collapse:collapse;">\';\n        $strHtml.=\'<thead>\';\n        $strHtml.=\'<tr>\';\n        $strHtml.=\'<th>ID</th><th>TÍTULO</th><th>AUTOR</th><th>DESCRIPCION</th>\';\n        $strHtml.=\'</th></tr>\';\n        $strHtml.=\'<thead>\';\n        $strHtml.=\'<tbody>\';\n\n\n        foreach ($arrDatos as $row)\n        {\n            $strHtml.=\'<tr>\';\n            $strHtml.=\'<td>\'.$row["video_id"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["video_titulo"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["autor_nombre"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["video_detalle"].\'</td>\';\n            $strHtml.=\'</tr>\';\n        }\n        $strHtml.=\'</tbody>\';\n        $strHtml.=\'</table>\';\n        echo $strHtml;\n    }\n    else\n    {\n       echo "No hay datos";\n    }\n}\n\n?>\n\nResultado\n\n\n<hr />SE ENCONTRARON 12 REGISTROS<br />\r\n<hr />LISTA DE VÍDEOS:<br />\r\n<table style="border:1px solid black; collapse:collapse;">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>TÍTULO</th>\r\n      <th>AUTOR</th>\r\n      <th>DESCRIPCION</th>\r\n      </th>\r\n    </tr>\r\n    <thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>HTML5</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre HTML5</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>PHP</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre PHP</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Java</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Java</td>\r\n        </tr>\r\n        <tr>\r\n          <td>4</td>\r\n          <td>CSS</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre CSS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>5</td>\r\n          <td>JS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre JS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>6</td>\r\n          <td>Python</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre Py</td>\r\n        </tr>\r\n        <tr>\r\n          <td>7</td>\r\n          <td>SSH</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre SSH</td>\r\n        </tr>\r\n        <tr>\r\n          <td>8</td>\r\n          <td>iOS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre iOS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>Android</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Android</td>\r\n        </tr>\r\n        <tr>\r\n          <td>10</td>\r\n          <td>Nada</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre Nada</td>\r\n        </tr>\r\n        <tr>\r\n          <td>11</td>\r\n          <td>C#</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre C#</td>\r\n        </tr>\r\n        <tr>\r\n          <td>12</td>\r\n          <td>Pascal</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Pascal</td>\r\n        </tr>\r\n      </tbody>\r\n</table>\r\n<hr />SE ENCONTRARON 10 REGISTROS<br />\r\n<hr />LISTA DE VÍDEOS:<br />\r\n<table style="border:1px solid black; collapse:collapse;">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>TÍTULO</th>\r\n      <th>AUTOR</th>\r\n      <th>DESCRIPCION</th>\r\n      </th>\r\n    </tr>\r\n    <thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>HTML5</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre HTML5</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>PHP</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre PHP</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Java</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Java</td>\r\n        </tr>\r\n        <tr>\r\n          <td>4</td>\r\n          <td>CSS</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre CSS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>5</td>\r\n          <td>JS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre JS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>6</td>\r\n          <td>Python</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre Py</td>\r\n        </tr>\r\n        <tr>\r\n          <td>7</td>\r\n          <td>SSH</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre SSH</td>\r\n        </tr>\r\n        <tr>\r\n          <td>8</td>\r\n          <td>iOS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre iOS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>Android</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Android</td>\r\n        </tr>\r\n        <tr>\r\n          <td>10</td>\r\n          <td>Nada</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre Nada</td>\r\n        </tr>\r\n      </tbody>\r\n</table>\n\n\n\n\nCódigo de creación de tablas: Ver Demo\nEste sería un demo de la creación de las tablas. Es también básico. Si usas InnoDB debes tomar en cuenta la declaración de llaves foráneas, la integridad referencial, etc. No lo he hecho por falta de tiempo, como ves, es mucho código. Y también es bueno no dar el trabajo totalmente hecho :)\nHe implementando algunas de las cosas que te dije en el comentario, como no poner el nombre del autor en la tabla vídeos, sino en una tabla aparte. Luego, mediante JOIN se pueden unir las tablas usando las llaves foráneas para traer los datos que necesites.\nCREATE TABLE  IF NOT EXISTS videos \n    (\n      video_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      video_titulo      VARCHAR(50) NOT NULL,\n      video_detalle     VARCHAR(50) NOT NULL,\n      autor_id          INT\n\n    );\n\n\nINSERT INTO videos (video_id,video_titulo, video_detalle, autor_id) VALUES  \n    (1,\'HTML5\', \'Este vídeo es sobre HTML5\',1), \n    (2,\'PHP\', \'Este vídeo es sobre PHP\',2), \n    (3,\'Java\', \'Este vídeo es sobre Java\',3), \n    (4,\'CSS\', \'Este vídeo es sobre CSS\',3), \n    (5,\'JS\', \'Este vídeo es sobre JS\',2), \n    (6,\'Python\', \'Este vídeo es sobre Py\',1), \n    (7,\'SSH\', \'Este vídeo es sobre SSH\',1), \n    (8,\'iOS\', \'Este vídeo es sobre iOS\',2), \n    (9,\'Android\', \'Este vídeo es sobre Android\',3), \n    (10,\'Nada\', \'Este vídeo es sobre Nada\',2), \n    (11,\'C#\', \'Este vídeo es sobre C#\',1), \n    (12,\'Pascal\', \'Este vídeo es sobre Pascal\',3) \n\n    ; \n\n\nCREATE TABLE  IF NOT EXISTS autores \n    (\n      autor_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      autor_nombre      VARCHAR(50) NOT NULL\n\n    );\n\n\nINSERT INTO autores (autor_id,autor_nombre) VALUES \n    (1,\'Pedro\'),\n    (2,\'Santiago\'),\n    (3,\'Juan\')\n    ;\n\n\nCREATE TABLE  IF NOT EXISTS usuario \n    (\n      usuario_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      usuario_nombre      VARCHAR(50) NOT NULL,\n      usuario_estatus     BOOLEAN  \n\n    );\n\n\nINSERT INTO usuario (usuario_id,usuario_nombre,usuario_estatus) VALUES \n    (1,\'Usuario No Registrado\',FALSE),\n    (2,\'Usuario Registrado\',TRUE)\n    ;\n\n-- Seleccionado sólo 10\nSELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\nFROM videos v\nINNER JOIN autores a ON v.autor_id = a.autor_id\nLIMIT 10;\n\n-- Seleccionado todos\nSELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\nFROM videos v\nINNER JOIN autores a ON v.autor_id = a.autor_id;\n\n', 'CreatedAt': datetime.datetime(2020, 8, 21, 3, 0, 4, 513000)}

message received crear base
questions available 216 
ask to bot for: crear base
time elapsed 0:00:00.038419
database_question ¿Cómo crear una página de videos?
questions match 1 
{'Id': 104, 'Title': '¿Cómo crear una página de videos?', 'Href': 'https://es.stackoverflow.com/questions/88494/c%c3%b3mo-crear-una-p%c3%a1gina-de-videos', 'ShortDescription': '\r\n            Estoy planteando el diseño de la base de datos llamada tutoriales:\n\nid       title       autor      detalle          índice       url\n 1      HTML 5       Jose    texto content  lista de vídeos   m-m\n ...\r\n        ', 'Content': "\nEstoy planteando el diseño de la base de datos llamada tutoriales:\nid       title       autor      detalle          índice       url\n 1      HTML 5       Jose    texto content  lista de vídeos   m-m\n 2       CSS 3       Jose    texto content  lista de vídeos   m-v\n\nLa estructura parece ser sencilla, clara y fácil, pero el problema mayor se basa en el índice de los videos.\n\nEn el índice contará toda la lista de los videos.\n\nAquí el detalle, el problema es que deseo mostrar los primeros 10 videos de la lista del índice y el resto de los vídeos restringirlos, es decir, que se muestren igual pero que el enlace del video esté disponible solamente si se registra en la página web.\nPor ejemplo, la consulta de los resultados los asignaría de está manera:\nwhile ($video = mysqli_fetch_array($rows)) {\n  echo '<div>'.$video['title'].'</div>\n        <div>'.$video['autor'].'</div>\n        <div>'.$video['detalle'].'</div>\n        <div>'.$video['indice'].'</div>';\n}\nwhile($row = mysqli_fetch_array($result)) {\n  $id = $row['id'];\n  $title = $row['title'];\n  $autor = $row['autor'];\n  $detalle = $row['detalle'];\n  $indice = $row['indice'];\n  $urls = $row['url'];\n}\n\nEl problema es, ¿Cómo restringir el resto de videos? ¿Cómo mostrar la lista de los índices de videos a una restricción a cierto número de videos?\n", 'Answer': '\nBien, te mostraré un ejemplo de lo que te he dicho en mi comentario.\nTe toca a ti refinar los detalles. Tendrás un ejemplo de cómo funciona. He comentado algunas cosas en el código, menos de lo que quisiera, por falta de tiempo. No obstante, creo que el código es bastante claro.\nLa idea es esta:\nDependiendo de si el usuario está registrado o no, previa verificación en la tabla de usuarios, lanzarás una consulta con LIMIT 10 o no.\nEn ambos casos recuperas un array de resultados y construyes una tabla, la cual mostrarás en pantalla. La misma tendrá sólo 10 vídeos si el usuario no está registrado, y todos los vídeos si lo está.\nPara consultar a la Base de datos he usado PDO en vez de MySQLi por varios motivos que no quiero exponer ahora, entre ellos porque es más fácil y porque para obtener un arreglo asociativo de resultados, en tu máquina puede fallar si no tienes la extensión mysqlnd instalada... por eso uso PDO. Si por algún motivo estás obligado a usar MySQLi, puedes adaptar esa parte a MySQLi sin mayor problema.\nEste es un ejemplo completo en phpfiddle:\nCódigo: Ver Demo\n<?php\n\nrequire "util/public_db_info.php";\n$pdo = new PDO($dsn, $user_name, $pass_word);\n\n/**\n *  Prueba con un usuario registrado \n *  En el código  se usa  PDO y  consultas preparadas\n*/\n\n$sql = "SELECT usuario_estatus FROM usuario WHERE usuario_id=:id";  \n$id=2;\n$stmt = $pdo->prepare($sql);\n$stmt->bindValue("id",$id);\n$stmt ->execute();\n\n$bolRegistrado=$stmt->fetchColumn();\nimprimir ($bolRegistrado, $pdo);\n\n/**\n *  Prueba con un usuario NO registrado \n *  En el código  se usa  PDO y  consultas preparadas\n*/\n\n$sql = "SELECT usuario_estatus FROM usuario WHERE usuario_id=:id";  \n$id=1;\n$stmt = $pdo->prepare($sql);\n$stmt->bindValue("id",$id);\n$stmt ->execute();\n\n$bolRegistrado=$stmt->fetchColumn();\nimprimir ($bolRegistrado, $pdo);\n\n\n\n$pdo = null;\n\n\nfunction imprimir($bolRegistrado, $pdo)\n{\n    if ($bolRegistrado||$bolRegistrado=0)\n    {\n        $sql_videos="SELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\n                 FROM videos v\n                 INNER JOIN autores a ON v.autor_id = a.autor_id";\n    }else{\n        $sql_videos="SELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\n                 FROM videos v\n                 INNER JOIN autores a ON v.autor_id = a.autor_id\n                 LIMIT 10";\n\n    }\n\n    $datos=$pdo->query($sql_videos);\n    $arrDatos = $datos->fetchAll(PDO::FETCH_ASSOC);\n\n    if ($arrDatos)\n    {\n        echo "<hr />SE ENCONTRARON  ".count($arrDatos). " REGISTROS<br /><hr />";\n        /**\n         *  Construímos nuestra tabla  de forma limpia\n        */\n        $strHtml=\'LISTA DE VÍDEOS:<br />\';\n        $strHtml.=\'<table style="border:1px solid black; collapse:collapse;">\';\n        $strHtml.=\'<thead>\';\n        $strHtml.=\'<tr>\';\n        $strHtml.=\'<th>ID</th><th>TÍTULO</th><th>AUTOR</th><th>DESCRIPCION</th>\';\n        $strHtml.=\'</th></tr>\';\n        $strHtml.=\'<thead>\';\n        $strHtml.=\'<tbody>\';\n\n\n        foreach ($arrDatos as $row)\n        {\n            $strHtml.=\'<tr>\';\n            $strHtml.=\'<td>\'.$row["video_id"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["video_titulo"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["autor_nombre"].\'</td>\';\n            $strHtml.=\'<td>\'.$row["video_detalle"].\'</td>\';\n            $strHtml.=\'</tr>\';\n        }\n        $strHtml.=\'</tbody>\';\n        $strHtml.=\'</table>\';\n        echo $strHtml;\n    }\n    else\n    {\n       echo "No hay datos";\n    }\n}\n\n?>\n\nResultado\n\n\n<hr />SE ENCONTRARON 12 REGISTROS<br />\r\n<hr />LISTA DE VÍDEOS:<br />\r\n<table style="border:1px solid black; collapse:collapse;">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>TÍTULO</th>\r\n      <th>AUTOR</th>\r\n      <th>DESCRIPCION</th>\r\n      </th>\r\n    </tr>\r\n    <thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>HTML5</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre HTML5</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>PHP</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre PHP</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Java</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Java</td>\r\n        </tr>\r\n        <tr>\r\n          <td>4</td>\r\n          <td>CSS</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre CSS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>5</td>\r\n          <td>JS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre JS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>6</td>\r\n          <td>Python</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre Py</td>\r\n        </tr>\r\n        <tr>\r\n          <td>7</td>\r\n          <td>SSH</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre SSH</td>\r\n        </tr>\r\n        <tr>\r\n          <td>8</td>\r\n          <td>iOS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre iOS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>Android</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Android</td>\r\n        </tr>\r\n        <tr>\r\n          <td>10</td>\r\n          <td>Nada</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre Nada</td>\r\n        </tr>\r\n        <tr>\r\n          <td>11</td>\r\n          <td>C#</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre C#</td>\r\n        </tr>\r\n        <tr>\r\n          <td>12</td>\r\n          <td>Pascal</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Pascal</td>\r\n        </tr>\r\n      </tbody>\r\n</table>\r\n<hr />SE ENCONTRARON 10 REGISTROS<br />\r\n<hr />LISTA DE VÍDEOS:<br />\r\n<table style="border:1px solid black; collapse:collapse;">\r\n  <thead>\r\n    <tr>\r\n      <th>ID</th>\r\n      <th>TÍTULO</th>\r\n      <th>AUTOR</th>\r\n      <th>DESCRIPCION</th>\r\n      </th>\r\n    </tr>\r\n    <thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>1</td>\r\n          <td>HTML5</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre HTML5</td>\r\n        </tr>\r\n        <tr>\r\n          <td>2</td>\r\n          <td>PHP</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre PHP</td>\r\n        </tr>\r\n        <tr>\r\n          <td>3</td>\r\n          <td>Java</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Java</td>\r\n        </tr>\r\n        <tr>\r\n          <td>4</td>\r\n          <td>CSS</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre CSS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>5</td>\r\n          <td>JS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre JS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>6</td>\r\n          <td>Python</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre Py</td>\r\n        </tr>\r\n        <tr>\r\n          <td>7</td>\r\n          <td>SSH</td>\r\n          <td>Pedro</td>\r\n          <td>Este vídeo es sobre SSH</td>\r\n        </tr>\r\n        <tr>\r\n          <td>8</td>\r\n          <td>iOS</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre iOS</td>\r\n        </tr>\r\n        <tr>\r\n          <td>9</td>\r\n          <td>Android</td>\r\n          <td>Juan</td>\r\n          <td>Este vídeo es sobre Android</td>\r\n        </tr>\r\n        <tr>\r\n          <td>10</td>\r\n          <td>Nada</td>\r\n          <td>Santiago</td>\r\n          <td>Este vídeo es sobre Nada</td>\r\n        </tr>\r\n      </tbody>\r\n</table>\n\n\n\n\nCódigo de creación de tablas: Ver Demo\nEste sería un demo de la creación de las tablas. Es también básico. Si usas InnoDB debes tomar en cuenta la declaración de llaves foráneas, la integridad referencial, etc. No lo he hecho por falta de tiempo, como ves, es mucho código. Y también es bueno no dar el trabajo totalmente hecho :)\nHe implementando algunas de las cosas que te dije en el comentario, como no poner el nombre del autor en la tabla vídeos, sino en una tabla aparte. Luego, mediante JOIN se pueden unir las tablas usando las llaves foráneas para traer los datos que necesites.\nCREATE TABLE  IF NOT EXISTS videos \n    (\n      video_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      video_titulo      VARCHAR(50) NOT NULL,\n      video_detalle     VARCHAR(50) NOT NULL,\n      autor_id          INT\n\n    );\n\n\nINSERT INTO videos (video_id,video_titulo, video_detalle, autor_id) VALUES  \n    (1,\'HTML5\', \'Este vídeo es sobre HTML5\',1), \n    (2,\'PHP\', \'Este vídeo es sobre PHP\',2), \n    (3,\'Java\', \'Este vídeo es sobre Java\',3), \n    (4,\'CSS\', \'Este vídeo es sobre CSS\',3), \n    (5,\'JS\', \'Este vídeo es sobre JS\',2), \n    (6,\'Python\', \'Este vídeo es sobre Py\',1), \n    (7,\'SSH\', \'Este vídeo es sobre SSH\',1), \n    (8,\'iOS\', \'Este vídeo es sobre iOS\',2), \n    (9,\'Android\', \'Este vídeo es sobre Android\',3), \n    (10,\'Nada\', \'Este vídeo es sobre Nada\',2), \n    (11,\'C#\', \'Este vídeo es sobre C#\',1), \n    (12,\'Pascal\', \'Este vídeo es sobre Pascal\',3) \n\n    ; \n\n\nCREATE TABLE  IF NOT EXISTS autores \n    (\n      autor_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      autor_nombre      VARCHAR(50) NOT NULL\n\n    );\n\n\nINSERT INTO autores (autor_id,autor_nombre) VALUES \n    (1,\'Pedro\'),\n    (2,\'Santiago\'),\n    (3,\'Juan\')\n    ;\n\n\nCREATE TABLE  IF NOT EXISTS usuario \n    (\n      usuario_id          INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n      usuario_nombre      VARCHAR(50) NOT NULL,\n      usuario_estatus     BOOLEAN  \n\n    );\n\n\nINSERT INTO usuario (usuario_id,usuario_nombre,usuario_estatus) VALUES \n    (1,\'Usuario No Registrado\',FALSE),\n    (2,\'Usuario Registrado\',TRUE)\n    ;\n\n-- Seleccionado sólo 10\nSELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\nFROM videos v\nINNER JOIN autores a ON v.autor_id = a.autor_id\nLIMIT 10;\n\n-- Seleccionado todos\nSELECT v.video_id, v.video_titulo, v.video_detalle, a.autor_nombre\nFROM videos v\nINNER JOIN autores a ON v.autor_id = a.autor_id;\n\n', 'CreatedAt': datetime.datetime(2020, 8, 21, 3, 0, 4, 513000)}

message received hola

message received h
questions available 245 
ask to bot for: h
time elapsed 0:00:00.023982
database_question ¿De que manera se puede encriptar una contraseña para una base de datos?
questions match 1 
{'Id': 1, 'Title': '¿De que manera se puede encriptar una contraseña para una base de datos?', 'Href': 'https://es.stackoverflow.com/questions/2994/de-que-manera-se-puede-encriptar-una-contrase%c3%b1a-para-una-base-de-datos', 'ShortDescription': '\r\n            Según he leido SHA-2 no es seguro y hace falta usar una encriptación más fuerte. He visto que en PHP se puede usar password_hash(). \n\n¿La salida de esa función sería suficiente encriptación?\r\n        ', 'Content': '\nSegún he leido SHA-2 no es seguro y hace falta usar una encriptación más fuerte. He visto que en PHP se puede usar password_hash(). \n¿La salida de esa función sería suficiente encriptación?\n', 'Answer': "\nHe encontrado una respuesta de Stackoverflow en inglés que me responde a la pregunta Secure hash and salt for PHP passwords.\nLa respuesta mas votada dice que no se debe hacer hash con SHA1, MD5 o SHA256 porque los crackers modernos pueden superar los 180 miles de millones de hash por segundo por lo que no les cuesta romperla.\nY la segunda más votada recomienda no escribir nuestro propio mecanismo, sino usar la función de PHP password_hash(). Ejemplo de password_hash():\n$pass = $_POST['password'];    \n$passHash = password_hash($pass, PASSWORD_BCRYPT);\n\nEl algoritmo BCRYPT nos creará una cadena de 72 caracteres como máximo, la cual es distinta cada vez que se codifica, por lo que para comprobar que la contraseña introducida es la correcta debemos usar la función password_verify():\npassword_verify($pass, $passHash)\n\n", 'CreatedAt': datetime.datetime(2020, 8, 21, 2, 56, 8, 797000)}

message received hola

message received sacar backup en mysqli
questions available 245 
ask to bot for: sacar backup en mysqli
time elapsed 0:00:00.024964
database_question Ayuda con un JOINS en 2 tablas en MySQLi en PHP
questions match 1 
{'Id': 118, 'Title': 'Ayuda con un JOINS en 2 tablas en MySQLi en PHP', 'Href': 'https://es.stackoverflow.com/questions/204150/ayuda-con-un-joins-en-2-tablas-en-mysqli-en-php', 'ShortDescription': '\r\n            les comento he leido varias veces el blog de https://www.vichaunter.org/desarrollo-web/joins-mysql-bien-explicado-lo-necesitas-saber\n\npero no logro implementar un JOINS en mi proyecto, lo que tengo ...\r\n        ', 'Content': '\nles comento he leido varias veces el blog de https://www.vichaunter.org/desarrollo-web/joins-mysql-bien-explicado-lo-necesitas-saber\npero no logro implementar un JOINS en mi proyecto, lo que tengo hasta el momento me funciona perfecto pero estoy haciendo 2 o 3 query y la idea es optimizar las consultas a mi base de datos por lógicas razones.\nLO QUE TENGO\nQuery 1\nSELECT * FROM pagos  WHERE user = \'$usua\' ORDER BY id DESC LIMIT $init, $limit_end\n\nQuery 2\nSELECT * FROM users WHERE username = \'$rowUser\'\n\nUsando estos 2 Query recupero la informacion contenida por medio de un mysqli_fetch_assoc y he logrado que funcione mi proyecto, pero me gustaría aprender a implementar un JOINS en mi query para darle practicidad con el uso de dinamismos con el uso de un LIKE \'%$busqueda%\' como lo he hecho en otros de mis query que he implementado una busqueda asi:\nSELECT * FROM users \n             WHERE (idusuario LIKE \'%$busqueda%\' OR\n                    nombre LIKE \'%$busqueda%\' OR\n                    email LIKE \'%$busqueda%\') \n             AND user_type = \'$user_tipo\'\n             ORDER BY id\n             DESC LIMIT $init, $limit_end\n\nLo que Necesito\nQue el query me haga un SELECT y con el dato user de la tabla PEDIDO se recupere el nombre de la tabla USERS y que por medio de un mysqli_fetch_array pueda recuperar dicho dato dejo a continuación la estructura de mis 2 tablas\n    TABLA USER\n-id\n-idusuario\n-nombre\n-usernameÍndice\n-email\n-tlf\n-cel\n-direccion\n\nTABLA PEDIDO\n-id\n-user\n-monto\n-concepto\n-mes_de_pago\n-afiliacion\n-banco_origen\n-banco_destino\n\nEn la tabla PEDIDO user = idusuario de la tabla USERS\n\nCon la ayuda de ustedes intente hacerlo yo solo pero no lo logre, voy a colocar la function completa en la que estoy trabajando\n<?php\nfunction lista_pagos_mes(){\n    global $db, $usua, $mes, $limit_end;\n\n  $url = basename($_SERVER ["PHP_SELF"]);\n\n  if (isset($_REQUEST[\'busqueda\'])) {\n    $busqueda = strtolower($_REQUEST[\'busqueda\']);\n  } else {\n    $busqueda = "";\n  }\n\n\n    if (isset($_GET[\'mes\']))\n        $ini=$_GET[\'mes\'];\n    else\n        $ini=1;\n        $init = ($ini-1) * $limit_end;\n\n\n        if (isAdmin()) {\n\n          if (empty($busqueda)) {\n            $busqueda = "";\n            $countmes="SELECT COUNT(*) FROM pagos WHERE status_pago = \'PENDIENTE\'";\n            $querymes = "SELECT * FROM pagos WHERE status_pago = \'PENDIENTE\' ORDER BY id DESC LIMIT $init, $limit_end";\n            $resultmes = mysqli_query($db, $querymes);\n            $rowmes =  mysqli_num_rows($resultmes);\n\n            $mensaje  = \'No hay datos que Mostrar\';\n          } else {\n            $countmes="SELECT COUNT(*) FROM pagos WHERE status_pago = \'PENDIENTE\' AND (user LIKE \'%$busqueda%\')";\n            $querymes = "SELECT * FROM pagos WHERE status_pago = \'PENDIENTE\'  AND (user LIKE \'%$busqueda%\') ORDER BY id DESC LIMIT $init, $limit_end";\n            $resultmes = mysqli_query($db, $querymes);\n            $rowmes =  mysqli_num_rows($resultmes);\n\n            $mensaje  = \'No hay datos que Mostrar\';\n\n          }\n\n        } else {\n\n            $countmes="SELECT COUNT(*) FROM pagos WHERE user = \'$usua\'";\n            $querymes = "SELECT * FROM pagos  WHERE user = \'$usua\' ORDER BY id DESC LIMIT $init, $limit_end";\n            $resultmes = mysqli_query($db, $querymes);\n            $rowmes =  mysqli_num_rows($resultmes);\n\n            $mensaje  = \'No hay datos que Mostrar del usuario \' .$_SESSION[\'user\'][\'username\'];\n\n\n        }\n\n/* querys */\n\n\n    if (!$rowmes){\n\n    echo \'<div class="alert alert-danger" role="alert" >\';\n    echo \'<h3>\';\n    echo $mensaje; \n    //unset($_SESSION[\'successmes\']);\n    echo \'</h3>\';\n    echo \'</div>\';\n\n    } else {\n        $num = $db->query($countmes);\n        $x = $num->fetch_array();\n        $total = ceil($x[0]/$limit_end);\n\n        if (isAdmin()){\n\n\n    echo \'<div class="table-responsive">\';\n    echo \'<table id="tabla1" class="table table-bordered table-hover stacktable">\n    <thead>\n     <tr>\n     <th>ID</th> \n     <th>Usuario</th>\n     <th>Nombre</th>\n      <th>Fecha de Pago </th>\n      <th>Monto / Mes Pagado</th>\n      <th>Nro Transf / CI</th>\n      <th>Desde / Hasta</th>\n      <th>Accion</th>\n     </tr>\n     </thead>\n     <tbody>\';\n\n     $c = $db->query($querymes);\n     while($rowmes = $c->fetch_array(MYSQLI_ASSOC))\n      {\n      $date = date_create($rowmes[\'fecha_pago\']);\n      $fecha = date_format($date, \'d-m-Y\');\n      $fecha_pago = $fecha;\n      $rowUser = $rowmes[\'user\'];\n      $rowid = $rowmes[\'id\'];\n\n      $sql_user = "SELECT * FROM users WHERE username = \'$rowUser\' OR nombre LIKE \'%$busqueda%\'";\n      $resultado_user = mysqli_query($db,$sql_user);\n    $row_user = mysqli_fetch_assoc($resultado_user);\n    $rowNombre = $row_user[\'nombre\'];\n      $link_aprobar_mes = \'<form autocomplete="off" class="was-validated" method="post" action= "mensualidades.php?id=\'.$rowid.\'&user=\'.$rowUser.\'"><button type="submit" class="btn btn-primary" name="aprobar_pago_btn">Aprobar</button> </form>\';\necho \'<tr>\';\necho \'<td>\'.$rowid.\'</td>\n       <td>\'.$rowUser.\'</td>\n       <td>\'.$rowNombre.\'</td>\n       <td>\'.$fecha_pago .\'</td>\n       <td>\'.$rowmes[\'monto\'].\' BsS / \'.$rowmes[\'mes_de_pago\']. \'</td>\n       <td>\'.$rowmes[\'nro_transf\'] . \' / \'.$rowmes[\'ci_nro_cuenta\'].\'</td>\n       <td>\'.$rowmes[\'banco_origen\'].\' / \'.$rowmes[\'banco_destino\'] .\'</td>\n       <td>\'.$link_aprobar_mes .\'</td>\n      </tr>\';\n      } \n      echo \'</tbody></table>\';\n\n\n        }\n        else\n        // SI NO ES ADMIN\n?>\n\nAsí como lo tengo solo me permite filtrar los resultados según lo que se desee buscar pero asi como esta funciona solo si se efectúa una búsqueda del numero de cliente y mi idea es que si se busca un nombre también lo haga..!\n', 'Answer': '\nA fin ahora comprendo el uso de JOIN en MYSQL estaba algo perdido, pero he solucionado usando el siguiente query\nbasandome en el siguiente ejemplo:\nSELECT nombre_columna\nFROM tableA\nINNER JOIN tableB\nON tableA.nombre_columna=tableB.nombre_columna\n\nHe re escrito mi query asi:\n$querymes = "SELECT * FROM pagos\n        INNER JOIN users\n        ON pagos.user=users.idusuario\n         WHERE status_pago = \'PENDIENTE\'  AND (user LIKE \'%$busqueda%\' OR nombre LIKE \'%$busqueda%\') ORDER BY fecha_pago ASC LIMIT $init, $limit_end";\n\n\nAl combinar y/o unir los registros de más de una tablas (pueden ser dos o más tablas). La cláusula ON se utiliza para que coincida con los registros en dos tablas o más a través de una columna con un valor en común entre las tablas que se van a unir, basándose en el valor de la columna id. El uso de INNER JOIN combina una unión interior permite filas de cualquiera de las tablas aparezcan en el resultado si y sólo si ambas tablas cumplen las condiciones especificadas en la cláusula ON, para obtener resultados relacionado entre sí en una consulta de php y mysql que necesitamos en nuestro proyectos web.\n\n', 'CreatedAt': datetime.datetime(2020, 8, 21, 3, 0, 34, 293000)}
start command received

message received necesito realizar una inserción en mi base de datos
questions available 245 
ask to bot for: necesito realizar una inserción en mi base de datos
time elapsed 0:00:00.022941
database_question mostrar datos de una base de datos mediante función
questions match 1 
{'Id': 239, 'Title': 'mostrar datos de una base de datos mediante función', 'Href': 'https://es.stackoverflow.com/questions/351258/mostrar-datos-de-una-base-de-datos-mediante-funci%c3%b3n', 'ShortDescription': '\r\n            Tengo el siguiente problema, no puedo mostrar datos de una fila con mysqli y php. \nen localhost lo hacia así y funcionaba:\n\n$id = $_SESSION ["id_usuario"];\n\n$sql = "SELECT * FROM usuarios WHERE id = \'$...\r\n        ', 'Content': '\nTengo el siguiente problema, no puedo mostrar datos de una fila con mysqli y php. \nen localhost lo hacia así y funcionaba:\n$id = $_SESSION ["id_usuario"];\n\n$sql = "SELECT * FROM usuarios WHERE id = \'$id\'";\n$result = $mysqli->query($sql);\n$row = $result->fetch_assoc();\n\ny podia llamarlo con un echo en cualquier sección del archivo php, ahora que esta en un servidor ocurre un error interno 500 y en el log me muestra Fatal error: Call to a member function fetch_assoc() on boolean, y me muestra la linea con el error:\n$row = $result->fetch_assoc();\n\nrevisando sobre el tema mencionan que es porque no esta orientado como objeto, y que lo mejor seria con consultas preparadas como lo mencionan en esta pregunta Fatal error: Call to a member function fetch_assoc() on boolean \npero no podría poner la información en distintas secciones del archivo php.\nVi que también se puede hacer mediante función así que revisando hice lo siguiente:\nfunction MostrarUsuario($id){\n        global $mysqli;\n\n        $stmt = $mysqli->prepare("SELECT * FROM usuarios WHERE id = ?");\n        $stmt->bindParam("i",$id);\n        $stmt -> execute();\n\n        return $stmt -> fetch();\n    }\n\nY lo mostraría con:\n$id = $_SESSION ["id_usuario"];\n$row = MostrarUsuario($id);\n\necho $row[nombre];\necho $row[email];\n\nY me sigue saliendo error interno.\n', 'Answer': '\nEl problema es que mysqli_stmt::fetch() no retorna los valores que estas buscando, si no que inicializa variables vinculadas en una sentencia previa, mysqli_stmt::bind_result()\nPodrias asignarle a una variable $result, el resultado de la consulta con mysqli_stmt::get_result()\n<?php\n\n$mysqli = new mysqli(\'localhost\', \'el_user\', \'el_passw\', \'la_BD\');\nif($mysqli->connect_errno) {\n    exit(\'Connect failed: \'. $this->connection->connect_error);\n}\n$mysqli->set_charset("utf8");\n\nfunction MostrarUsuario($id) {\n    global $mysqli;\n    $stmt = $mysqli->prepare("SELECT * FROM usuarios WHERE id = ?");\n    $stmt->bind_param("i", $id);\n    $stmt->execute();\n\n    $result = $stmt->get_result();\n    return $result->fetch_assoc();\n}\n\n$id = $_SESSION["id_usuario"];\n$row = MostrarUsuario($id);\n$mysqli->close();\n\necho $row[\'nombre\']; // Esto lleva comillas\necho $row[\'email\'];\n\n', 'CreatedAt': datetime.datetime(2020, 8, 21, 3, 4, 27, 523000)}
